ALGORITHM Sum_distinct_array
VAR
    tab1 , tab2 :  ARRAY_OF INTEGER[];
    sum : INTEGER :=0;
    found: BOOLEAN;
    i, j : INTEGER
BEGIN
    Read(tab1);
    Read(tab2);
    FOR i FROM 1 TO length(tab1) STEP 1  DO
        FOR j FROM 1 TO length(tab2) STEP 1  DO
            IF (tab1[i] = tab2[j]) THEN
                found := true
                BREAK
            END_IF
            
        END_FOR
        IF (found = false) THEN
            sum := sum+ tab1[i]
        END_IF 
    END_FOR

    FOR i FROM 1 TO length(tab2) STEP 1  DO
        FOR j FROM 1 TO length(tab1) STEP 1  DO
            IF (tab2[i] = tab1[j]) THEN
                found := true
                BREAK
            END_IF
            END_FOR
            IF (found = false) THEN
                sum := sum+ tab2[i]
            END_IF 
    END_FOR


    Write(sum);
END


PROCEDURE dot_product(v1: ARRAY_OF INTEGER[10], v2: ARRAY_OF INTEGER[10], ps : INTEGER :=0)
BEGIN
    FOR i FROM 1 TO length(v1) STEP 1  DO
        ps := ps + (v1[i] * v2[i])
    END_FOR
END

ALGORITHM Check_Orthogonality
VAR
    v1, v2 : ARRAY_OF INTEGER[];
    ps: INTEGER;
BEGIN
    Read(v1);
    Read(v2);
    dot_product(v1,v2,ps);
    IF (ps = 0) THEN
        Write("v1 et v2 sont orthogonaux")
    ELSE
        Write("v1 et v2 ne sont pas orthogonaux ")
    END_IF
END